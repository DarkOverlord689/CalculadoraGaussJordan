
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.Desktop;
import java.net.URI;

/**
 *
 * @author DarkOvs77
 */
public class Gauss extends javax.swing.JFrame {

    int n; //almacena numero de incognitas Gg

    DefaultTableModel modelo = new DefaultTableModel();
    //creacion de un objeto llamando al constructor por defecto

    public int getN() {
        return n;
    }

    public void setN(int n) {
        this.n = n;
    }

    public Gauss() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(Color.DARK_GRAY);
        this.getContentPane().setForeground(Color.RED);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldN = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("GAAA"));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel1.setText("Numero de incognitas:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(60, 110, 140, 20);
        jPanel1.add(jTextFieldN);
        jTextFieldN.setBounds(220, 110, 90, 24);

        jButton1.setText("Generar matriz aumentada");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(340, 110, 190, 32);

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "X"
            }
        ));
        jScrollPane1.setViewportView(jTable);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(50, 170, 480, 120);

        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jScrollPane2.setViewportView(jTextArea);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(600, 170, 350, 250);

        jButton2.setText("Limpiar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(740, 430, 100, 32);

        jButton3.setText("Resolver el sistema lineal");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(160, 320, 270, 32);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/upao logo.jpg"))); // NOI18N
        jPanel1.add(jLabel3);
        jLabel3.setBounds(910, 70, 70, 90);

        jLabel4.setFont(new java.awt.Font("Georgia", 1, 24)); // NOI18N
        jLabel4.setText("DarkOverlord");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(70, 30, 490, 50);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/Gaussito.jpg"))); // NOI18N
        jPanel1.add(jLabel5);
        jLabel5.setBounds(40, 340, 80, 90);

        jLabel6.setText("Soporte");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel6);
        jLabel6.setBounds(740, 20, 50, 16);

        jLabel7.setText("Cerrar");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel7);
        jLabel7.setBounds(930, 20, 40, 20);

        jLabel8.setText("Minimizar");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel8);
        jLabel8.setBounds(840, 20, 60, 16);

        jLabel9.setFont(new java.awt.Font("Verdana", 2, 24)); // NOI18N
        jLabel9.setText("Gauss Jordan");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(300, 410, 170, 50);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1003, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jButton3.setMnemonic('r');
        try {

            int n = this.getN();

            double m[][] = new double[n][n];
            //almacena coeficientes de la matriz aumentada
            double r[] = new double[n];
            //almacena el valor de la solucion

            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    m[i][j] = Double.parseDouble(String.valueOf(jTable.getValueAt(i, j)));

                }

                r[i] = Double.parseDouble(String.valueOf(jTable.getValueAt(i, n)));
            }

            r = this.resolver(m, r);

            for (int i = 0; i < n; i++) {
                jTextArea.append("x" + (i + 1) + " = " + r[i] + "\n");

            }

        } catch (Exception e) {

            JOptionPane.showMessageDialog(this, "Error en lectura de datos");

        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        try {

            this.setN(Integer.parseInt(jTextFieldN.getText()));
            n = this.getN();

            if (n <= 1) {
                throw new Exception("N° de incognitas inválidas");
            } else if (n >= 2 && n <= 6) {
                Object columna[] = new Object[n + 1];
                //el arreglo mostrará en el título JTabel las incognitas y su solucion
                //si el sistema tiene 2 incognitas aparecera una matriz de 2*3
                //se mostrara el titulo de JTabel x1, x2, d
                for (int i = 0; i < n + 1; i++) {
                    if (i < n) {
                        columna[i] = "x" + (i + 1);
                    } else {
                        columna[i] = "d";
                    }
                }

                modelo = new DefaultTableModel(columna, n);
                //muestra el titulo y el JTablet toma la dimension de la matriz aumentada

                jTable.setModel(modelo);
                //el JTablet toma la dimension de la matriz aumentada
            } else {
                throw new Exception("N° de incognitas invalido");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jTextArea.setText("");
        jButton2.setMnemonic('l');
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
        Abrir_ContactoConSoporte();
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
        this.setExtendedState(ICONIFIED);
    }//GEN-LAST:event_jLabel8MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gauss.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gauss.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gauss.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gauss.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gauss().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable;
    private javax.swing.JTextArea jTextArea;
    private javax.swing.JTextField jTextFieldN;
    // End of variables declaration//GEN-END:variables

    private double[] resolver(double[][] m, double[] r) {
        //El metodo de Gauss Jordan trabaja con la idea de convertir la matriz aumentada en la matriz identidad
        int n = this.getN();

        for (int i = 0; i < n; i++) {

            double d, c = 0;
            d = m[i][i];
            // seleccionamos el pivote

            jTextArea.append(Double.toString(1 / d) + "*fila" + (i + 1) + "\n");
            // muesra en el area de texto el pivote seleccionado

            for (int j = 0; j < n; j++) {
                // pasamos a convertir en 1 al pivote seleccionado
                m[i][j] = ((m[i][j]) / d);
            }

            r[i] = ((r[i]) / d);

            // paso a mostrar las opraciones realizadas en la matriz aumentada
            for (int j = 0; j < n; j++) {

                for (int k = 0; k < n; k++) {

                    jTextArea.append(Double.toString(m[j][k]) + "\t");

                }

                jTextArea.append("|\t" + Double.toString(r[j]) + "\n");
            }

            jTextArea.append("\n\n");
            // fin paso a motrar las opraciones realizadas en la matriz aumentada

            for (int x = 0; x < n; x++) {

                if (i != x) {
                    c = m[x][i];

                    jTextArea.append("-" + Double.toString(c) + " * fila" + (i + 1) + "+ fila" + (x + 1) + "\n");
                    // muestra en pantalla las opraciones que se realizaran por fila

                    for (int y = 0; y < n; y++) {
                        // se hace cero a todos los elemntos de la colunma que no sean el pivote
                        m[x][y] = m[x][y] - c * m[i][y];

                    }
                    r[x] = r[x] - c * r[i];

                    // paso a mostrar las opraciones realizadas en la matriz aumentada
                    for (int j = 0; j < n; j++) {

                        for (int k = 0; k < n; k++) {

                            jTextArea.append(Double.toString(m[j][k]) + "\t");

                        }

                        jTextArea.append("|\t" + Double.toString(r[j]) + "\n");
                    }
                    jTextArea.append("\n\n");
                    // fin paso a motrar las opraciones realizadas en la matriz aumentada

                }// fin if (i != x)
            }// fin for (int x = 0; x <= r.length - 1; x++)

        }//fin bucle i
        return r;// retorna la solucion al sistema
    }

    public void Abrir_ContactoConSoporte() {
        try {
            Desktop.getDesktop().browse(URI.create("https://api.whatsapp.com/send?phone=51948917386&text=GAAAAAAAAAAAAAAAAAAAA"));
        } catch (Exception e) {
        }
    }
}
